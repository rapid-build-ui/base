var _extends=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(t[s]=r[s])}return t};import{dashCase,empty,keys}from"./util.js";export function normalizeAttributeDefinition(t,e){const{attribute:r}=e,s="object"==typeof r?_extends({},r):{source:r,target:r};return!0===s.source&&(s.source=dashCase(t)),!0===s.target&&(s.target=dashCase(t)),s};function identity(t){return t}export function normalizePropertyDefinition(t,e){const{coerce:r,default:s,deserialize:i,serialize:a}=e;return{attribute:normalizeAttributeDefinition(t,e),coerce:r||identity,default:s,deserialize:i||identity,serialize:a||identity}};const defaultTypesMap=new Map;function defineProps(t){if(t.hasOwnProperty("_propsNormalized"))return;const{props:e}=t;keys(e).forEach(r=>{let s=e[r]||e.any;defaultTypesMap.has(s)&&(s=defaultTypesMap.get(s)),"function"!=typeof s&&(s=prop(s)),s({constructor:t},r)})}function delay(t){window.Promise?Promise.resolve().then(t):setTimeout(t)}export function prop(t){const e=t||{},r=function({constructor:t},r){const s=normalizePropertyDefinition(r,e);t.hasOwnProperty("_propsNormalized")||(t._propsNormalized={}),t._propsNormalized[r]=s;const{attribute:{source:i,target:a}}=s;i&&(t._observedAttributes.push(i),t._attributeToPropertyMap[i]=r,i!==a&&(t._attributeToAttributeMap[i]=a)),Object.defineProperty(t.prototype,r,{configurable:!0,get(){const t=this._props[r];return null==t?s.default:t},set(t){const{attribute:{target:e},serialize:i}=s;if(e){const r=i?i(t):t;null==r?this.removeAttribute(e):this.setAttribute(e,r)}this._props[r]=s.coerce(t),this.triggerUpdate()}})};return Object.keys(e).forEach(t=>r[t]=e[t]),r};export const withUpdate=(t=HTMLElement)=>{var e,r;return r=e=class extends t{constructor(...t){var e;return e=super(...t),this._prevProps={},this._prevState={},this._props={},this._state={},e}static get observedAttributes(){return defineProps(this),this._observedAttributes.concat(super.observedAttributes||[])}static get props(){return this._props}static set props(t){this._props=t}get props(){return keys(this.constructor.props).reduce((t,e)=>(t[e]=this[e],t),{})}set props(t){const e=this.constructor.props;keys(t).forEach(r=>r in e&&(this[r]=t[r]))}get state(){return this._state}set state(t){this._state=t,this.triggerUpdate()}attributeChangedCallback(t,e,r){const{_attributeToAttributeMap:s,_attributeToPropertyMap:i,_propsNormalized:a}=this.constructor;super.attributeChangedCallback&&super.attributeChangedCallback(t,e,r);const o=i[t];if(o){const t=a[o];if(t){const{default:e,deserialize:s}=t,i=s?s(r):r;this._props[o]=null==i?e:i,this.triggerUpdate()}}const p=s[t];p&&(null==r?this.removeAttribute(p):this.setAttribute(p,r))}connectedCallback(){super.connectedCallback&&super.connectedCallback(),this.triggerUpdate()}shouldUpdate(){return!0}triggerUpdate(){this._updating||(this._updating=!0,delay(()=>{const{_prevProps:t,_prevState:e}=this;this.updating&&this.updating(t,e),this.updated&&this.shouldUpdate(t,e)&&this.updated(t,e),this._prevProps=this.props,this._prevState=this.state,this._updating=!1}))}},e._attributeToAttributeMap={},e._attributeToPropertyMap={},e._observedAttributes=[],e._props={},r};const{parse:parse,stringify:stringify}=JSON,attribute=Object.freeze({source:!0}),zeroOrNumber=t=>empty(t)?0:Number(t),any=prop({attribute:attribute}),array=prop({attribute:attribute,coerce:t=>Array.isArray(t)?t:empty(t)?null:[t],default:Object.freeze([]),deserialize:parse,serialize:stringify}),boolean=prop({attribute:attribute,coerce:Boolean,default:!1,deserialize:t=>!empty(t),serialize:t=>t?"":null}),number=prop({attribute:attribute,default:0,coerce:zeroOrNumber,deserialize:zeroOrNumber,serialize:t=>empty(t)?null:String(Number(t))}),object=prop({attribute:attribute,default:Object.freeze({}),deserialize:parse,serialize:stringify}),string=prop({attribute:attribute,default:"",coerce:String,serialize:t=>empty(t)?null:String(t)});defaultTypesMap.set(Array,array),defaultTypesMap.set(Boolean,boolean),defaultTypesMap.set(Number,number),defaultTypesMap.set(Object,object),defaultTypesMap.set(String,string);export const props={any:any,array:array,boolean:boolean,number:number,object:object,string:string};