import browserParsersList from"./parser-browsers.js";import osParsersList from"./parser-os.js";import platformParsersList from"./parser-platforms.js";import enginesParsersList from"./parser-engines.js";import Utils from"./utils.js";class Parser{constructor(s,t=!1){if(void 0===s||null===s||""===s)throw new Error("UserAgent parameter can't be empty");this._ua=s,this.parsedResult={},!0!==t&&this.parse()}getUA(){return this._ua}test(s){return s.test(this._ua)}parseBrowser(){this.parsedResult.browser={};const s=browserParsersList.find(s=>{if("function"==typeof s.test)return s.test(this);if(s.test instanceof Array)return s.test.some(s=>this.test(s));throw new Error("Browser's test function is not valid")});return s&&(this.parsedResult.browser=s.describe(this.getUA())),this.parsedResult.browser}getBrowser(){return this.parsedResult.browser?this.parsedResult.browser:this.parseBrowser()}getBrowserName(s){return s?String(this.getBrowser().name).toLowerCase()||"":this.getBrowser().name||""}getBrowserVersion(){return this.getBrowser().version}getOS(){return this.parsedResult.os?this.parsedResult.os:this.parseOS()}parseOS(){this.parsedResult.os={};const s=osParsersList.find(s=>{if("function"==typeof s.test)return s.test(this);if(s.test instanceof Array)return s.test.some(s=>this.test(s));throw new Error("Browser's test function is not valid")});return s&&(this.parsedResult.os=s.describe(this.getUA())),this.parsedResult.os}getOSName(s){const{name:t}=this.getOS();return s?String(t).toLowerCase()||"":t||""}getOSVersion(){return this.getOS().version}getPlatform(){return this.parsedResult.platform?this.parsedResult.platform:this.parsePlatform()}getPlatformType(s=!1){const{type:t}=this.getPlatform();return s?String(t).toLowerCase()||"":t||""}parsePlatform(){this.parsedResult.platform={};const s=platformParsersList.find(s=>{if("function"==typeof s.test)return s.test(this);if(s.test instanceof Array)return s.test.some(s=>this.test(s));throw new Error("Browser's test function is not valid")});return s&&(this.parsedResult.platform=s.describe(this.getUA())),this.parsedResult.platform}getEngine(){return this.parsedResult.engine?this.parsedResult.engine:this.parseEngine()}getEngineName(s){return s?String(this.getEngine().name).toLowerCase()||"":this.getEngine().name||""}parseEngine(){this.parsedResult.engine={};const s=enginesParsersList.find(s=>{if("function"==typeof s.test)return s.test(this);if(s.test instanceof Array)return s.test.some(s=>this.test(s));throw new Error("Browser's test function is not valid")});return s&&(this.parsedResult.engine=s.describe(this.getUA())),this.parsedResult.engine}parse(){return this.parseBrowser(),this.parseOS(),this.parsePlatform(),this.parseEngine(),this}getResult(){return Object.assign({},this.parsedResult)}satisfies(s){const t={};let e=0;const r={};let i=0;if(Object.keys(s).forEach(o=>{const n=s[o];"string"==typeof n?(r[o]=n,i+=1):"object"==typeof n&&(t[o]=n,e+=1)}),e>0){const s=Object.keys(t),e=s.find(s=>this.isOS(s));if(e){const s=this.satisfies(t[e]);if(void 0!==s)return s}const r=s.find(s=>this.isPlatform(s));if(r){const s=this.satisfies(t[r]);if(void 0!==s)return s}}if(i>0){const s=Object.keys(r).find(s=>this.isBrowser(s,!0));if(void 0!==s)return this.compareVersion(r[s])}}isBrowser(s,t=!1){const e=this.getBrowserName().toLowerCase();let r=s.toLowerCase();const i=Utils.getBrowserTypeByAlias(r);return t&&i&&(r=i.toLowerCase()),r===e}compareVersion(s){let t=[0],e=s,r=!1;const i=this.getBrowserVersion();if("string"==typeof i)return">"===s[0]||"<"===s[0]?(e=s.substr(1),"="===s[1]?(r=!0,e=s.substr(2)):t=[],">"===s[0]?t.push(1):t.push(-1)):"="===s[0]?e=s.substr(1):"~"===s[0]&&(r=!0,e=s.substr(1)),t.indexOf(Utils.compareVersions(i,e,r))>-1}isOS(s){return this.getOSName(!0)===String(s).toLowerCase()}isPlatform(s){return this.getPlatformType(!0)===String(s).toLowerCase()}isEngine(s){return this.getEngineName(!0)===String(s).toLowerCase()}is(s){return this.isBrowser(s)||this.isOS(s)||this.isPlatform(s)}some(s=[]){return s.some(s=>this.is(s))}}export default Parser;