import{createMarker}from"./template";const markerRegex=/{{(.*?)}}/;export class HTMLTemplate{constructor(e){this.parts=[],this.element=e;let t=-1,r=0;const o=[],n=document.createTreeWalker(e.content,NodeFilter.SHOW_ELEMENT|NodeFilter.SHOW_TEXT);for(;n.nextNode();){t++;const e=n.currentNode;if(1===e.nodeType){if(e.hasAttributes()){const o=Array.from(e.attributes);for(let n=0;n<o.length;n++){const s=o[n],a=s.value.split(markerRegex);console.log("result",a);const i=a.filter((e,t)=>t%2==0);console.log("attributeStrings",i),i.length>0&&(this.parts.push({type:"attribute",index:t,name:name,strings:i}),e.removeAttribute(s.name),r+=i.length-1)}}}else if(3===e.nodeType){const n=e.data,s=e.parentNode,a=n.split(markerRegex).filter((e,t)=>t%2==0);if(a.length>0){const n=a.length-1;for(let r=0;r<n;r++)s.insertBefore(""===a[r]?createMarker():document.createTextNode(a[r]),e),this.parts.push({type:"node",index:++t});""===a[n]?(s.insertBefore(createMarker(),e),o.push(e)):e.data=a[n],r+=n}}}}};